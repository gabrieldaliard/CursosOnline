// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace ClassLibrary1
{
    // ****************************************************************************************************
    // This is not a commercial licence, therefore only a few tables/views/stored procedures are generated.
    // ****************************************************************************************************

    // Cursos
    public class CursoConfiguration : IEntityTypeConfiguration<Curso>
    {
        public void Configure(EntityTypeBuilder<Curso> builder)
        {
            builder.ToTable("Cursos", "dbo");
            builder.HasKey(x => x.IdCurso).HasName("PK__Cursos__085F27D65BF44E5D").IsClustered();

            builder.Property(x => x.IdCurso).HasColumnName(@"IdCurso").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.Titulo).HasColumnName(@"Titulo").HasColumnType("varchar(100)").IsRequired().IsUnicode(false).HasMaxLength(100);
            builder.Property(x => x.IdInstructor).HasColumnName(@"idInstructor").HasColumnType("int").IsRequired();
            builder.Property(x => x.FechaCreacion).HasColumnName(@"FechaCreacion").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.FechaModificacion).HasColumnName(@"FechaModificacion").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.Interesados).HasColumnName(@"Interesados").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Estudiantes).HasColumnName(@"Estudiantes").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IdEstado).HasColumnName(@"IdEstado").HasColumnType("int").IsRequired();
            builder.Property(x => x.Destacado).HasColumnName(@"Destacado").HasColumnType("bit").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.Estado).WithMany(b => b.Cursoes).HasForeignKey(c => c.IdEstado).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Cursos_Estados");
            builder.HasOne(a => a.Instructore).WithMany(b => b.Cursoes).HasForeignKey(c => c.IdInstructor).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Cursos_Instructores");
        }
    }

}
// </auto-generated>
